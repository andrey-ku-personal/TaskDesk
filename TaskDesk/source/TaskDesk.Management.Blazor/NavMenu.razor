@using TaskDesk.Management.Blazor.Core.Endpoints.Project;
@using TaskDesk.SharedModel.Filter;
@using TaskDesk.SharedModel.Project.Models;

@inject IDialogService DialogService
@inject ProjectEndpoints HttpClient;

<MudDrawerContainer Class="mud-height-full">
    <MudDrawer Open="true" Elevation="0" Variant="@DrawerVariant.Persistent">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Task Desk</MudText>
        </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
            <MudNavGroup
                Title="Projects"
                Icon="@Icons.Material.Filled.ViewKanban"
                ExpandedChanged="OpenProjects">
                @*<MudNavLink Icon="@Icons.Material.Filled.MoreHoriz" OnClick="OpenProjectCreateDialog">Actions</MudNavLink>*@
                <div class="seach-field">
                    <MudTextField
                        @bind-Value="_filter.SearchByText"
                        Label="Search"
                        Variant="Variant.Text"
                        TextChanged="SearchByText">
                    </MudTextField>
                </div>

                @if (_result.Result.Any())
                {
                    @foreach (var project in _result.Result)
                    {
                        <MudNavLink Icon="@Icons.Material.Filled.Adjust">@project.Name</MudNavLink>
                    }
                }
            </MudNavGroup>
        </MudNavMenu>
    </MudDrawer>

</MudDrawerContainer>

@code {
    private bool _isProjectListOpened;
    private Core.FilterModel _filter = new();
    private FilteredResult<ProjectViewModel> _result = new(0, new());

    private async Task OpenProjectCreateDialog()
    {
        var dialog = await DialogService.ShowAsync<Dialogs.DialogCreateMenu>();
    }

    private async Task OpenProjects()
    {
        if (!_isProjectListOpened)
            _result = await HttpClient.GetAll(_filter);

        _isProjectListOpened = !_isProjectListOpened;
    }

    private async Task ChangeList(int pageNumber)
    {
        _filter.PageNumber = pageNumber - 1;

        _result = await HttpClient.GetAll(_filter);
    }

    private async Task SearchByText(string text)
    {
        _result = await HttpClient.GetAll(_filter);
    }
}
