@using TaskDesk.Management.Blazor.Core.Endpoints.Project;
@using TaskDesk.SharedModel.Project.Models;

@inject IDialogService DialogService
@inject ProjectEndpoints HttpClient;

<MudDrawerContainer Class="mud-height-full">
    <MudDrawer Open="true" Elevation="0" Variant="@DrawerVariant.Persistent">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Task Desk</MudText>
        </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
            <MudNavGroup
                Title="Projects"
                Icon="@Icons.Material.Filled.ViewKanban"
                ExpandedChanged="OpenProjects"
            >
                <MudNavLink Icon="@Icons.Material.Filled.MoreHoriz" OnClick="OpenProjectCreateDialog">Actions</MudNavLink>
                @foreach (var project in _projects)
                {
                    <MudNavLink Icon="@Icons.Material.Filled.Adjust">@project.Name</MudNavLink>
                }
            </MudNavGroup>
        </MudNavMenu>
    </MudDrawer>

</MudDrawerContainer>

@code {
    private bool _isProjectListOpened;
    private Core.FilterModel _filter = new();
    private List<ProjectViewModel> _projects = new();

    private async Task OpenProjectCreateDialog()
    {
        var dialog = await DialogService.ShowAsync<Dialogs.DialogCreateMenu>();
    }

    private async Task OpenProjects()
    {
        if (!_isProjectListOpened)
            _projects = (await HttpClient.GetAll(_filter)).Result;

        _isProjectListOpened = !_isProjectListOpened;
    }

    private async Task ChangeList(int pageNumber)
    {
        _filter.PageNumber = pageNumber - 1;

        _projects = (await HttpClient.GetAll(_filter)).Result;
    }
}
