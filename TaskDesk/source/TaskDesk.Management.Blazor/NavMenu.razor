@using TaskDesk.Management.Blazor.Core.Endpoints.Project;
@using TaskDesk.SharedModel.Filter;
@using TaskDesk.SharedModel.Project.Models;

@inject IDialogService DialogService
@inject ProjectEndpoints HttpClient;

<MudDrawerContainer Class="mud-height-full">
    <MudDrawer Open="true" Elevation="0" Variant="@DrawerVariant.Persistent">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Task Desk</MudText>
        </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
            <MudNavGroup
                Title="Projects"
                Icon="@Icons.Material.Filled.ViewKanban"
                ExpandedChanged="OpenProjects">
                <div class="seach-field">
                    <MudTextField
                        Adornment="Adornment.Start"
                        AdornmentIcon="@Icons.Material.Filled.Search"
                        @bind-Value="_filter.SearchByText"
                        Label="Search"
                        Variant="Variant.Text"
                        TextChanged="SearchByText">
                    </MudTextField>
                </div>

                @if (_result.Result != null)
                {
                    @foreach (var project in _result.Result)
                    {
                        <MudNavLink Icon="@Icons.Material.Filled.Adjust">@project.Name</MudNavLink>
                    }

                    <div class="paginator">
                        <MudPagination
                            Color="Color.Primary"
                            Size="Size.Small" 
                            BoundaryCount="1"
                            MiddleCount="0"
                            Count="_result.PageCount"
                            SelectedChanged="Paginate"
                            Selected="_pageIndex" />
                    </div>
                }
            </MudNavGroup>
        </MudNavMenu>
    </MudDrawer>

</MudDrawerContainer>

@code {
    private bool _isProjectListOpened;
    private int _pageIndex = 1;
    private Core.FilterModel _filter = new() { PageSize = 3 };
    private FilteredResult<ProjectViewModel> _result = new();

    private MudPagination _mudPagination = default!;

    private async Task OpenProjectCreateDialog()
    {
        await DialogService.ShowAsync<Dialogs.DialogCreateMenu>();
    }

    private async Task OpenProjects()
    {
        if (!_isProjectListOpened)
            _result = await Load(_filter);

        _isProjectListOpened = !_isProjectListOpened;
    }

    private async Task Paginate(int pageNumber)
    {
        _pageIndex = pageNumber;
        _filter.PageNumber = pageNumber - 1;

        _result = await Load(_filter);
    }

    private async Task SearchByText(string text)
    {
        _filter.PageNumber = 0;

        _result = await Load(_filter);

        _pageIndex = 1;
    }

    private async Task<FilteredResult<ProjectViewModel>> Load(Core.FilterModel filter)
    {
        return await HttpClient.GetAll(filter);
    }
}
